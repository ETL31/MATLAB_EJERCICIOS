clc
clear
close all
% - Ernesto Mihael Tolentino Leon 
% PROGRAMA: MATLAB 
fprintf('Metodo de Crank-Nicolson\n');
m=input('Intervalo para la variable X: ');
n=input('Intervalo para la variable t: ');
a=input('Extremo a= ');
b=input('Extremo b= ');
T=input('Tiempo final T= ');
C=input('Coeficiente c^2= ');
c1=input('Temperatura en x=a','s');
c2=input('Temperatura en x=b','s');
h1=inline(c1,'t');
h2=inline(c2,'t');
%partici√≥n
xnodos=linspace(a,b,m+1);
tnodos=linspace(0,T,n+1);
h=(b-a)/m
k=T/n
r=C*k/h^2;
ss=strcat('coeficiente lamda=',num2str(r));disp(ss);
%Matrtices A y B
A=(1+r)*eye(m-1)+diag(-r/2*ones(1,m-2),+1)+diag(-r/2*ones(1,m-2),-1);
B=(1-r)*eye(m-1)+diag(r/2*ones(1,m-2),+1)+diag(r/2*ones(1,m-2),-1);
%solucion inicial para t=0 en el interior de [a,b]
fun=input('Ingrese la funcion f(x)=','s');
f=inline(fun);
for i=2:m
    solfila(i-1)=f(xnodos(i));
end
A
B
xx=input('Pulse una tecla para continuar ... ','s');
%solucion inicial para t=0 en todo el intervalo [a,b]
sol=[h1(tnodos(1)),solfila,h2(tnodos(1))];
%el proceso iterativo en el Metodo de Crank-Nicolson
for j=2:n+1
    fila = inv(A)*(B*solfila'+[0.5*r*h1(tnodos(j)),zeros(1,m-3),0.5*r*h2(tnodos(j))]'+[0.5*r*h1(tnodos(j-1)),zeros(1,m-3),0.5*r*h2(tnodos(j-1))]');
    solfila=fila';
    sol=[sol;h1(tnodos(j)),solfila,h2(tnodos(j))];
end
sol
%grafica de la solucion aproximada
mesh(xnodos,tnodos,sol);
title('solucion aproximada por Crank-Nicolson');
xlabel('eje x');
ylabel('eje t');
